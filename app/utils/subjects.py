from typing import Tuple
from rapidfuzz import fuzz


# ะะปััะตะฒัะต ัะปะพะฒะฐ ะดะปั ะพะฟัะตะดะตะปะตะฝะธั ะฟัะตะดะผะตัะพะฒ
SUBJECT_KEYWORDS = {
    "ะผะฐัะตะผะฐัะธะบะฐ": [
        "ััะฐะฒะฝะตะฝะธะต", "ัะตัะธ", "ะฝะฐะนะดะธ", "ะฒััะธัะปะธ", "ะบะพัะตะฝั", "ะฟัะพะธะทะฒะพะดะฝะฐั", 
        "ะธะฝัะตะณัะฐะป", "ััะฝะบัะธั", "ะณัะฐัะธะบ", "ััะตัะณะพะปัะฝะธะบ", "ะบะฒะฐะดัะฐั", "ะฟะปะพัะฐะดั",
        "ะพะฑัะตะผ", "ะฟะตัะธะผะตัั", "ะฐะปะณะตะฑัะฐ", "ะณะตะพะผะตััะธั", "ะดัะพะฑั", "ะฟัะพัะตะฝั",
        "ะปะพะณะฐัะธัะผ", "ัะธะฝัั", "ะบะพัะธะฝัั", "ัะฐะฝะณะตะฝั", "ะฟะธ", "ัะฐะดะธะฐะฝ"
    ],
    "ัะธะทะธะบะฐ": [
        "ัะธะปะฐ", "ะผะฐััะฐ", "ััะบะพัะตะฝะธะต", "ัะบะพัะพััั", "ัะฝะตัะณะธั", "ะผะพัะฝะพััั",
        "ะฝะฐะฟััะถะตะฝะธะต", "ัะพะบ", "ัะพะฟัะพัะธะฒะปะตะฝะธะต", "ะทะฐะบะพะฝ", "ัะพัะผัะปะฐ", "ะดะถะพัะปั",
        "ะฝัััะพะฝ", "ะฟะฐัะบะฐะปั", "ะฒะฐัั", "ะฒะพะปัั", "ะฐะผะฟะตั", "ะพะผ", "ะผะตัะฐะฝะธะบะฐ",
        "ัะปะตะบััะธัะตััะฒะพ", "ะพะฟัะธะบะฐ", "ัะตัะผะพะดะธะฝะฐะผะธะบะฐ", "ะบะธะฝะตะผะฐัะธะบะฐ", "ะดะธะฝะฐะผะธะบะฐ"
    ],
    "ัะธะผะธั": [
        "ัะตะฐะบัะธั", "ััะฐะฒะฝัะน", "ะผะพะปะตะบัะปะฐ", "ะฐัะพะผ", "ัะปะตะผะตะฝั", "ัะพะตะดะธะฝะตะฝะธะต",
        "ะบะธัะปะพัะฐ", "ะพัะฝะพะฒะฐะฝะธะต", "ัะพะปั", "ะพะบัะธะด", "ะฒะฐะปะตะฝัะฝะพััั", "ะฟะตัะธะพะด",
        "ะณััะฟะฟะฐ", "ะธะทะพัะพะฟ", "ะธะพะฝ", "ัะฐััะฒะพั", "ะบะพะฝัะตะฝััะฐัะธั", "ะผะพะปั",
        "ะผะพะปััะฝะฐั", "ัะธะผะธัะตัะบะฐั", "ัะพัะผัะปะฐ", "ะฒะตัะตััะฒะพ", "ะบะฐัะฐะปะธะทะฐัะพั"
    ],
    "ััััะบะธะน": [
        "ะณัะฐะผะผะฐัะธะบะฐ", "ะพััะพะณัะฐัะธั", "ะฟัะฝะบััะฐัะธั", "ะผะพััะพะปะพะณะธั", "ัะธะฝัะฐะบัะธั",
        "ัะฐััะธัะฐ", "ะฟัะตะดะปะพะณ", "ัะพัะท", "ะผะตะถะดะพะผะตัะธะต", "ะฟัะธัะฐััะธะต", "ะดะตะตะฟัะธัะฐััะธะต",
        "ัะบะปะพะฝะตะฝะธะต", "ัะฟััะถะตะฝะธะต", "ะฟะฐะดะตะถ", "ะฒัะตะผั", "ะฝะฐะบะปะพะฝะตะฝะธะต", "ะทะฐะปะพะณ",
        "ะฟะพะดะปะตะถะฐัะตะต", "ัะบะฐะทัะตะผะพะต", "ะพะฟัะตะดะตะปะตะฝะธะต", "ะดะพะฟะพะปะฝะตะฝะธะต", "ะพะฑััะพััะตะปัััะฒะพ"
    ],
    "ะปะธัะตัะฐัััะฐ": [
        "ะฟัะพะธะทะฒะตะดะตะฝะธะต", "ะฐะฒัะพั", "ะณะตัะพะน", "ะฟะตััะพะฝะฐะถ", "ััะถะตั", "ะบะพะผะฟะพะทะธัะธั",
        "ัะตะผะฐ", "ะธะดะตั", "ะฟัะพะฑะปะตะผะฐ", "ะพะฑัะฐะท", "ัะธะผะฒะพะป", "ะผะตัะฐัะพัะฐ", "ัะฟะธัะตั",
        "ััะฐะฒะฝะตะฝะธะต", "ะณะธะฟะตัะฑะพะปะฐ", "ะปะธัะพัะฐ", "ะฐะปะปะตะณะพัะธั", "ะธัะพะฝะธั", "ัะฐัะธัะฐ",
        "ัะพะผะฐะฝ", "ะฟะพะฒะตััั", "ัะฐััะบะฐะท", "ะฟะพัะผะฐ", "ััะธัะพัะฒะพัะตะฝะธะต", "ะดัะฐะผะฐ"
    ],
    "ะฐะฝะณะปะธะนัะบะธะน": [
        "english", "ะฐะฝะณะปะธะนัะบะธะน", "ะณัะฐะผะผะฐัะธะบะฐ", "ะฒัะตะผะตะฝะฐ", "present", "past",
        "future", "perfect", "continuous", "ะผะพะดะฐะปัะฝัะต", "ะณะปะฐะณะพะปั", "ะฐััะธะบะปะธ",
        "ะฟัะตะดะปะพะณะธ", "ัะพัะทั", "ะฟะตัะตะฒะพะด", "ะฟะตัะตะฒะตะดะธ", "ะฟะตัะตะฒะตะดะธัะต", "vocabulary",
        "pronunciation", "speaking", "listening", "reading", "writing"
    ],
    "ะธะฝัะพัะผะฐัะธะบะฐ": [
        "ะฟัะพะณัะฐะผะผะธัะพะฒะฐะฝะธะต", "ะฐะปะณะพัะธัะผ", "ะฟัะพะณัะฐะผะผะฐ", "ะบะพะด", "ััะฝะบัะธั", "ัะธะบะป",
        "ััะปะพะฒะธะต", "ะผะฐััะธะฒ", "ะฟะตัะตะผะตะฝะฝะฐั", "python", "java", "c++", "javascript",
        "ะฑะฐะทะฐ ะดะฐะฝะฝัั", "sql", "html", "css", "ะฒะตะฑ", "ัะฐะนั", "ะฟัะธะปะพะถะตะฝะธะต",
        "ะธะฝัะตััะตะนั", "ะฟะพะปัะทะพะฒะฐัะตะปั", "ัะธััะตะผะฐ", "ะพะฟะตัะฐัะธะพะฝะฝะฐั", "ัะฐะนะป"
    ],
    "ะธััะพัะธั": [
        "ะธััะพัะธั", "ะธััะพัะธัะตัะบะธะน", "ะดะฐัะฐ", "ะณะพะด", "ะฒะตะบ", "ัะฟะพัะฐ", "ะฟะตัะธะพะด",
        "ะฒะพะนะฝะฐ", "ัะตะฒะพะปััะธั", "ัะตัะพัะผะฐ", "ัะฐัั", "ะธะผะฟะตัะฐัะพั", "ะฟัะตะทะธะดะตะฝั",
        "ะณะพััะดะฐัััะฒะพ", "ัััะฐะฝะฐ", "ะฝะฐัะพะด", "ะบัะปััััะฐ", "ัะธะฒะธะปะธะทะฐัะธั", "ะดัะตะฒะฝะธะน",
        "ััะตะดะฝะตะฒะตะบะพะฒัะต", "ะฝะพะฒะพะต ะฒัะตะผั", "ัะพะฒัะตะผะตะฝะฝะพััั", "ัะพะฑััะธะต", "ะปะธัะฝะพััั"
    ],
    "ะณะตะพะณัะฐัะธั": [
        "ะณะตะพะณัะฐัะธั", "ะณะตะพะณัะฐัะธัะตัะบะธะน", "ัััะฐะฝะฐ", "ััะพะปะธัะฐ", "ะณะพัะพะด", "ัะตะบะฐ",
        "ะพะทะตัะพ", "ะผะพัะต", "ะพะบะตะฐะฝ", "ะณะพัะฐ", "ัะฐะฒะฝะธะฝะฐ", "ะฟััััะฝั", "ะปะตั",
        "ะบะปะธะผะฐั", "ะฟะพะณะพะดะฐ", "ัะตะผะฟะตัะฐัััะฐ", "ะพัะฐะดะบะธ", "ะฒะตัะตั", "ะฟัะธัะพะดะฝัะต",
        "ัะตััััั", "ะฝะฐัะตะปะตะฝะธะต", "ัะบะพะฝะพะผะธะบะฐ", "ะฟัะพะผััะปะตะฝะฝะพััั", "ัะตะปััะบะพะต"
    ],
    "ะฑะธะพะปะพะณะธั": [
        "ะฑะธะพะปะพะณะธั", "ะฑะธะพะปะพะณะธัะตัะบะธะน", "ะบะปะตัะบะฐ", "ะพัะณะฐะฝะธะทะผ", "ัะบะฐะฝั", "ะพัะณะฐะฝ",
        "ัะธััะตะผะฐ", "ะฟะธัะตะฒะฐัะตะฝะธะต", "ะดััะฐะฝะธะต", "ะบัะพะฒะพะพะฑัะฐัะตะฝะธะต", "ะฝะตัะฒะฝะฐั",
        "ัะฝะดะพะบัะธะฝะฝะฐั", "ัะฐะทะผะฝะพะถะตะฝะธะต", "ัะฐะทะฒะธัะธะต", "ัะฒะพะปััะธั", "ะฝะฐัะปะตะดััะฒะตะฝะฝะพััั",
        "ะณะตะฝ", "ััะพะผะพัะพะผะฐ", "ะดะฝะบ", "ัะฝะบ", "ะฑะตะปะพะบ", "ัะตัะผะตะฝั", "ะฒะธัะฐะผะธะฝ"
    ]
}


def detect_subject(text: str) -> Tuple[str, float]:
    """
    ะะฟัะตะดะตะปัะตั ะฟัะตะดะผะตั ะฟะพ ัะตะบััั ะทะฐะดะฐัะธ
    
    Args:
        text: ะขะตะบัั ะทะฐะดะฐัะธ
        
    Returns:
        Tuple[ะฟัะตะดะผะตั, ัะฒะตัะตะฝะฝะพััั] ะณะดะต ัะฒะตัะตะฝะฝะพััั ะพั 0 ะดะพ 1
    """
    if not text:
        return "ะผะฐัะตะผะฐัะธะบะฐ", 0.0
    
    text_lower = text.lower()
    best_subject = "ะผะฐัะตะผะฐัะธะบะฐ"
    best_score = 0.0
    
    for subject, keywords in SUBJECT_KEYWORDS.items():
        total_score = 0
        matches = 0
        
        for keyword in keywords:
            # ะัะพะฒะตััะตะผ ัะพัะฝะพะต ะฒัะพะถะดะตะฝะธะต
            if keyword in text_lower:
                total_score += 1.0
                matches += 1
            else:
                # ะัะพะฒะตััะตะผ ะฝะตัะตัะบะพะต ัะพะฒะฟะฐะดะตะฝะธะต
                fuzzy_score = fuzz.partial_ratio(keyword, text_lower)
                if fuzzy_score > 80:  # ะะพัะพะณ ะดะปั ะฝะตัะตัะบะพะณะพ ัะพะฒะฟะฐะดะตะฝะธั
                    total_score += fuzzy_score / 100
                    matches += 1
        
        # ะะพัะผะฐะปะธะทัะตะผ ะพัะตะฝะบั
        if matches > 0:
            avg_score = total_score / len(keywords)
            if avg_score > best_score:
                best_score = avg_score
                best_subject = subject
    
    # ะัะปะธ ัะฒะตัะตะฝะฝะพััั ะพัะตะฝั ะฝะธะทะบะฐั, ััะธัะฐะตะผ ะผะฐัะตะผะฐัะธะบะพะน
    if best_score < 0.1:
        best_subject = "ะผะฐัะตะผะฐัะธะบะฐ"
        best_score = 0.5
    
    return best_subject, min(best_score, 1.0)


def get_subject_emoji(subject: str) -> str:
    """ะะพะทะฒัะฐัะฐะตั ัะผะพะดะทะธ ะดะปั ะฟัะตะดะผะตัะฐ"""
    emojis = {
        "ะผะฐัะตะผะฐัะธะบะฐ": "๐ข",
        "ัะธะทะธะบะฐ": "โก",
        "ัะธะผะธั": "๐งช",
        "ััััะบะธะน": "๐",
        "ะปะธัะตัะฐัััะฐ": "๐",
        "ะฐะฝะณะปะธะนัะบะธะน": "๐ฌ๐ง",
        "ะธะฝัะพัะผะฐัะธะบะฐ": "๐ป",
        "ะธััะพัะธั": "๐๏ธ",
        "ะณะตะพะณัะฐัะธั": "๐",
        "ะฑะธะพะปะพะณะธั": "๐งฌ"
    }
    return emojis.get(subject, "๐")
