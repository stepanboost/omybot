from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from loguru import logger
from ..config import config

router = Router()


WELCOME_KEYBOARD = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üìù –†–µ—à–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º"),
            KeyboardButton(text="üì∏ –†–µ—à–∏—Ç—å –ø–æ —Ñ–æ—Ç–æ"),
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º/—Ñ–æ—Ç–æ",
)


def build_subscription_keyboard() -> InlineKeyboardMarkup:
    pay_url = config.subscription_pay_url.strip()
    buttons = []
    if pay_url:
        buttons.append([InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å 299 ‚ÇΩ", url=pay_url)])
    buttons.append([InlineKeyboardButton(text="‚úñÔ∏è –ü–æ–∫–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="sub_skip")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


@router.message(Command("start"))
async def cmd_start(message: Message):
    """–ö–æ—Ä–æ—Ç–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ + inline-–∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ + –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é."""
    user_id = message.from_user.id
    first_name = message.from_user.first_name or ""

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

    welcome_text = (
        f"ü§ñ –ü—Ä–∏–≤–µ—Ç, {first_name}!\n\n"
        "–Ø –ø–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ —Ä–µ—à–∏—Ç—å —à–∫–æ–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è.\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫ —É–¥–æ–±–Ω–µ–µ –Ω–∞—á–∞—Ç—å:"
    )

    await message.answer(welcome_text, reply_markup=WELCOME_KEYBOARD)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–ª–æ–∫ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã inline-–∫–Ω–æ–ø–∫–∏ –±—ã–ª–∏ —Å—Ä–∞–∑—É
    sub_text = (
        "‚ú® –î–æ—Å—Ç—É–ø–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞ 299 ‚ÇΩ –≤ –º–µ—Å—è—Ü: –±—ã—Å—Ç—Ä–µ–µ –æ—Ç–≤–µ—Ç—ã –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å.\n"
        "–ú–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏."
    )
    await message.answer(sub_text, reply_markup=build_subscription_keyboard())


@router.callback_query(F.data == "sub_skip")
async def subscription_skip(callback: CallbackQuery):
    await callback.answer("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏", show_alert=False)
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer(
        "–û–∫–µ–π! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –Ω–∏–∂–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–¥–∞–Ω–∏–µ.",
        reply_markup=WELCOME_KEYBOARD,
    )


@router.message(F.text == "üìù –†–µ—à–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º")
async def handle_choose_text(message: Message):
    await message.answer(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: \"–†–µ—à–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: 3x + 7 = 25\""
    )


@router.message(F.text == "üì∏ –†–µ—à–∏—Ç—å –ø–æ —Ñ–æ—Ç–æ")
async def handle_choose_photo(message: Message):
    await message.answer(
        "–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ —Å –∑–∞–¥–∞–Ω–∏–µ–º (—á—ë—Ç–∫–æ–µ, –±–µ–∑ –±–ª–∏–∫–æ–≤)."
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    """–ö–æ—Ä–æ—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –ª–∏–º–∏—Ç–æ–≤/—Ñ–æ—Ä–º–∞—Ç–æ–≤."""
    help_text = (
        "üìñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:\n\n"
        "1) –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è ‚Äî —è –æ–ø—Ä–µ–¥–µ–ª—é –ø—Ä–µ–¥–º–µ—Ç –∏ –ø—Ä–µ–¥–ª–æ–∂—É —Ä–µ—à–µ–Ω–∏–µ.\n"
        "2) –ò–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ –∑–∞–¥–∞–Ω–∏—è ‚Äî –≤—ã–¥–µ–ª—é —É—Å–ª–æ–≤–∏–µ –∏ —Ä–µ—à—É.\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã:\n"
        "‚Ä¢ –†–µ—à–∏ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ: 3x + 7 = 25\n"
        "‚Ä¢ –§–∏–∑–∏–∫–∞: —Ç–µ–ª–æ 2 –∫–≥ –¥–≤–∏–∂–µ—Ç—Å—è —Å —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º 3 –º/—Å¬≤. –ù–∞–π–¥–∏ —Å–∏–ª—É\n"
        "‚Ä¢ –•–∏–º–∏—è: —É—Ä–∞–≤–Ω—è–π —Ä–µ–∞–∫—Ü–∏—é Fe + O‚ÇÇ ‚Üí Fe‚ÇÇO‚ÇÉ\n"
    )
    await message.answer(help_text, reply_markup=WELCOME_KEYBOARD)


# –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ (–¥–µ–º–æ)
@router.message(F.photo)
async def handle_photo(message: Message):
    await message.answer(
        "–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–¥–∞–Ω–∏–µ‚Ä¶ (–¥–µ–º–æ-–æ—Ç–≤–µ—Ç)"
    )


# –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ (–¥–µ–º–æ)
@router.message(F.text)
async def handle_text(message: Message):
    text = (message.text or "").strip()
    if not text:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞–Ω–∏—è –∏–ª–∏ —Ñ–æ—Ç–æ.")
        return

    if text in {"üìù –†–µ—à–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º", "üì∏ –†–µ—à–∏—Ç—å –ø–æ —Ñ–æ—Ç–æ"}:
        return  # —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞–º–∏

    response = (
        "üìù –ó–∞–¥–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ. (–¥–µ–º–æ-–æ—Ç–≤–µ—Ç)\n\n"
        "–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç:\n"
        "‚Ä¢ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞\n"
        "‚Ä¢ –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ\n"
        "‚Ä¢ –§–æ—Ä–º—É–ª—ã –≤ LaTeX\n"
        "‚Ä¢ –ù–µ–±–æ–ª—å—à–æ–π –∫–≤–∏–∑ –¥–ª—è —Å–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∏"
    )
    await message.answer(response)
